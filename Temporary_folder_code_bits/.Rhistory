data_processed<-data.frame()
for (i in length(data$Species)){
if (data$Wt_min_F[i]!="NA"){
data_processed[i,1]<-mean(data$Wt_min_F[i],data$Wt_min_F[i])# it is considering the non-nas but something is wrong
}
}
data$Wt_min_F[51]!="NA"
data$Wt_min_F[i]!="NA")
data$Wt_min_F[51]
if (data$Wt_min_F[i]!="NA"){
data_processed[i,1]<-mean(data$Wt_min_F[i],data$Wt_max_F[i])# it is considering the non-nas but something is wrong
}
which(data$Wt_min_F[i]!="NA")
which(!is.na(data$Wt_min_F))
!is.na(data$Wt_min_F[51]
)
if (!is.na(data$Wt_min_F[51])){
data_processed[i,1]<-mean(data$Wt_min_F[i],data$Wt_max_F[i])# it is considering the non-nas but something is wrong
}
data_processed[51,1]<-mean(data$Wt_min_F[51],data$Wt_max_F[51]
)
data_processed
data_processed[51,1]<-mean(data$Wt_min_F[51],data$Wt_max_F[51])
data_processed
data$Wt_max_F[51]
data$Wt_min_F[51]
mean(140,70)
Averages(140,70)
mean(c(data$Wt_min_F[51],data$Wt_max_F[51]))
if (!is.na(data$Wt_min_F[51])){
data_processed[i,1]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))# it is considering the non-nas but something is wrong
}
data_processed
data=read.csv("TableCode_example.csv", header=TRUE)
data_processed<-data.frame()
if (!is.na(data$Wt_min_F[51])){
data_processed[i,1]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))# it is considering the non-nas but something is wrong
}
data_processed<-data.frame()
for (i in length(data$Species)){
if (!is.na(data$Wt_min_F[51])){
data_processed[i,1]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))# it is considering the non-nas but something is wrong
}
}
data_processed
for (i in length(data$Species)){
if (!is.na(data$Wt_min_F[i])){
data_processed[i,1]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))# it is considering the non-nas but something is wrong
}
}
data_processed
data=read.csv("TableCode_example.csv", header=TRUE)
data_processed<-data.frame()
for (i in length(data$Species)){
if (!is.na(data$Wt_min_F[i])){
data_processed[i,1]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))# it is considering the non-nas but something is wrong
}
}
data_processed
length(data$Species)
for (i in 64){
if (!is.na(data$Wt_min_F[i])){
data_processed[i,1]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))# it is considering the non-nas but something is wrong
}
}
data_processed
data_processed<-data.frame()
for (i in length(data$Species)){
if (is.na(data$Wt_min_F[i])==FALSE){
data_processed[i,1]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))# it is considering the non-nas but something is wrong
}
}
data_processed
if(is.na(data$Wt_min_F[51])==TRUE)
if(is.na(data$Wt_min_F[51])==TRUE){
print(1)
}
if(!is.na(data$Wt_min_F[51])==TRUE){
print(1)
}
if(is.na(data$Wt_min_F[51])==FALSE){
print(1)
}
for (i in length(data$Species)){
if(is.na(data$Wt_min_F[51])==FALSE){
data_processed[i,1]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))# it is considering the non-nas but something is wrong
}
}
data_processed
data=read.csv("TableCode_example.csv", header=TRUE)
data_processed<-data.frame()
for (i in length(data$Species)){
if(is.na(data$Wt_min_F[51])==FALSE){
data_processed[i,1]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))# it is considering the non-nas but something is wrong
}
}
data_processed
data=read.csv("TableCode_example.csv", header=TRUE)
data_processed<-data.frame()
for (i in length(data$Species)){
if(is.na(data$Wt_min_F[i])==FALSE){
data_processed[i,1]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))# it is considering the non-nas but something is wrong
}
}
data_processed
data_processed[51,1]<-mean(c(data$Wt_min_F[51],data$Wt_max_F[51]))
data_processed
data=read.csv("TableCode_example.csv", header=TRUE)
data_processed<-data.frame()
for (i in length(data$Species)){
if(is.na(data$Wt_min_F[i])==FALSE){
data_processed[i,1]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))# it is considering the non-nas because it throws an error but it doesn't output data_processed
}
}
#the below is and empty listdata_processed
#WHY DOESNT THIS WORK???
#row51 doesn't ahve NAs
which (!is.na(data$Wt_min_F))
#the operation works outside the code
data_processed[51,1]<-mean(c(data$Wt_min_F[51],data$Wt_max_F[51])) is
data=read.csv("TableCode_example.csv", header=TRUE)
data_processed<-data.frame()
for (i in length(data$Species)){
if(is.na(data$Wt_min_F[i])==FALSE){
data_processed[i,1]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))# it is considering the non-nas because it throws an error but it doesn't output data_processed
}
}
#the below is and empty listdata_processed
#WHY DOESNT THIS WORK???
#row51 doesn't ahve NAs
which (!is.na(data$Wt_min_F))
#the operation works outside the code
data_processed[51,1]<-mean(c(data$Wt_min_F[51],data$Wt_max_F[51]))
#the if condition works
if(is.na(data$Wt_min_F[51])==FALSE){
print(1)
}
data_processed
data=read.csv("TableCode_example.csv", header=TRUE)
data_processed<-data.frame()
for (i in 1:length(data$Species)){
if(is.na(data$Wt_min_F[i])==FALSE){
data_processed[i,1]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))# it is considering the non-nas because it throws an error but it doesn't output data_processed
}
}
data_processed
1+1
data=read.csv("TableCode_example.csv", header=TRUE)
setwd("E:/Github_Projects/Tails/Temporary_folder_code_bits")
data=read.csv("TableCode_example.csv", header=TRUE)
data_processed<-data.frame()
for (i in 1:length(data$Species)){
if(is.na(data$Wt_min_F[i])==FALSE){
data_processed[i,1]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))
}
}
data_processed
data=read.csv("TableCode_example.csv", header=TRUE)
data_processed<-data.frame()
for (i in 1:length(data$Species)){
if(is.na(data$Wt_min_F[i])==FALSE){
data_processed[i,1]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))
}
}
data_processed
data_processed<-data.frame()
colnames(data_processed)<-colnames(data)
ncol(data)
data_processed<-data.frame(,37)
data_processed<-data.frame(ncol=37)
data
data_processed
colnames(data_processed)<-colnames(data)
colnames(data_processed)
data_processed<-matrix(ncol=37)
colnames(data_processed)<-colnames(data)
data_processed
colnames(data_processed)<-cbind(c("Tlength_mm","Blength_mm","Wt_g"), colnames(data)
colnames(data_processed)<-cbind(c("Tlength_mm","Blength_mm","Wt_g"), colnames(data))
data_processed<-matrix(ncol=37)
colnames(data_processed)<-cbind(c("Tlength_mm","Blength_mm","Wt_g"), colnames(data))
data_processed<-matrix(ncol=40)
colnames(data_processed)<-cbind(c("Tlength_mm","Blength_mm","Wt_g"), colnames(data))
data=read.csv("TableCode_example.csv", header=TRUE)
data_processed<-matrix(ncol=37)
colnames(data_processed)<-cbind(c("Tlength_mm","Blength_mm","Wt_g"), colnames(data))
ncol(data)
data
data=read.csv("TableCode_example.csv", header=TRUE)
data_processed<-matrix(ncol=37)
colnames(data_processed)<-cbind(c("Tlength_mm","Blength_mm","Wt_g"), colnames(data))
colnames(data_processed)<-cbind(colnames(data))
data_processed<-matrix(ncol=34)
colnames(data_processed)<-cbind(colnames(data))
data_processed<-matrix(ncol=34)
colnames(data_processed)<-colnames(data)
data_processed<-matrix(ncol=35)
colnames(data_processed)<-c("X",colnames(data))
data_processed
data=read.csv("TableCode_example.csv", header=TRUE)
data_processed<-matrix(ncol=37)
colnames(data_processed)<-c("Tl_mm", "Bl_mm"," Wt_g",colnames(data))
data_processed
rownames(data_processed)<-rownames(data)
rownames(data)
rownames(data_processed)<-data$Species
length(data$Species)
length(ncol(data)
)
ncol(data)
data_processed<-matrix(ncol=(ncol(data)+3))
data_processed<-matrix(ncol=(ncol(data)+3), nrow=nrow(data))
attributes(data_processed)
data_processed
colnames(data_processed)<-c("Tl_mm", "Bl_mm"," Wt_g",colnames(data))
rownames(data_processed)<-data$Species
data_processed
for (i in 1:length(data$Species)){
#if there are average values for male and female weights
if(is.na(data$Wt_min_F[i])==FALSE){
data_processed$Wt_Av_F[i]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))
}
}
data_processed$Wt_Av_F
as.data.frame((data_processed))
data_processed=as.data.frame((data_processed))
data_processed$Wt_Av_F
data=read.csv("TableCode_example.csv", header=TRUE)
#make a matrix for all data but also add 3 columns for final Tl, Bl and Wt
data_processed<-matrix(ncol=(ncol(data)+3), nrow=nrow(data))
colnames(data_processed)<-c("Tl_mm", "Bl_mm"," Wt_g",colnames(data))
rownames(data_processed)<-data$Species
#
data_processed=as.data.frame((data_processed))
for (i in 1:length(data$Species)){
#if there are average values for male and female weights
if(is.na(data$Wt_min_F[i])==FALSE){
data_processed$Wt_Av_F[i]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))
}
}
data_processed
data_processed$Wt_Av_F
for (i in 1:length(data$Species)){
#if there are average values for male and female weights
if(is.na(data$Wt_min_F[i])==FALSE){
data_processed$Wt_Av_F[i]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))
}
if(is.na(data$Wt_min_M[i])==FALSE){
data_processed$Wt_Av_M[i]<-mean(c(data$Wt_min_M[i],data$Wt_max_M[i]))
}
}
data_processed$Wt_Av_M
for (i in 1:length(data$Species)){
#if there are average values for male and female weights
if(is.na(data$Wt_min_F[i])==FALSE){
data_processed$Wt_Av_F[i]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))
}
if(is.na(data$Wt_min_M[i])==FALSE){
data_processed$Wt_Av_M[i]<-mean(c(data$Wt_min_M[i],data$Wt_max_M[i]))
}
if(is.na(data$Bl_min_F[i])==FALSE){
data_processed$Bl_Av_F[i]<-mean(c(data$Bl_min_F[i],data$Bl_max_F[i]))
}
if(is.na(data$Bl_min_M[i])==FALSE){
data_processed$Bl_Av_M[i]<-mean(c(data$Bl_min_M[i],data$Bl_max_M[i]))
}
}
# turn into data frame to feed into loop; this is clunky but I prefer to have the names written out to reduce human error in assigning column numbers
data_processed=as.data.frame((data_processed))
for (i in 1:length(data$Species)){
#if there are average values for male and female weights
if(is.na(data$Wt_min_F[i])==FALSE){
data_processed$Wt_Av_F[i]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))
}
if(is.na(data$Wt_min_M[i])==FALSE){
data_processed$Wt_Av_M[i]<-mean(c(data$Wt_min_M[i],data$Wt_max_M[i]))
}
if(is.na(data$Bl_min_F[i])==FALSE){
data_processed$Bl_Av_F[i]<-mean(c(data$Bl_min_F[i],data$Bl_max_F[i]))
}
if(is.na(data$Bl_min_M[i])==FALSE){
data_processed$Bl_Av_M[i]<-mean(c(data$Bl_min_M[i],data$Bl_max_M[i]))
}
if(is.na(data$Tl_min_F[i])==FALSE){
data_processed$Tl_Av_F[i]<-mean(c(data$Tl_min_F[i],data$Tl_max_F[i]))
}
if(is.na(data$Tl_min_M[i])==FALSE){
data_processed$Tl_Av_M[i]<-mean(c(data$Tl_min_M[i],data$Tl_max_M[i]))
}
}
data_processed
data_processed$Tl_Av_F
which(is.na(data_processed$Tl_Av_F))
which(!is.na(data_processed$Tl_Av_F))
which(!is.na(data_processed$Tl_Av_M))
View(data_processed)
?match
max (data_processed[,27:28] )
data_processed[,27:28]
max (data_processed[51,27:28] )
data_processed[51,27:28]
#if there are male/female ranges, provide their mean; this is clunky but I prefer to have the names written out to reduce human error in assigning column numbers
for (i in 1:length(data$Species)){
#if there are average values for male and female weights...same for the other ifs
if(is.na(data$Wt_min_F[i])==FALSE){
data_processed$Wt_Av_F[i]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))
}
if(is.na(data$Wt_min_M[i])==FALSE){
data_processed$Wt_Av_M[i]<-mean(c(data$Wt_min_M[i],data$Wt_max_M[i]))
}
if(is.na(data$Bl_min_F[i])==FALSE){
data_processed$Bl_Av_F[i]<-mean(c(data$Bl_min_F[i],data$Bl_max_F[i]))
}
if(is.na(data$Bl_min_M[i])==FALSE){
data_processed$Bl_Av_M[i]<-mean(c(data$Bl_min_M[i],data$Bl_max_M[i]))
}
if(is.na(data$Tl_min_F[i])==FALSE){
data_processed$Tl_Av_F[i]<-mean(c(data$Tl_min_F[i],data$Tl_max_F[i]))
}
if(is.na(data$Tl_min_M[i])==FALSE){
data_processed$Tl_Av_M[i]<-mean(c(data$Tl_min_M[i],data$Tl_max_M[i]))
}
}
data_processed[51,27:28]
max (data_processed[54,27:28] )
data_processed[54,27:28]
which(!is.na(data_processed$Tl_Av_M))
data_processed[54,29:30]
max (data_processed[54,29:30] )
# if both males and females have ranges
#if there min/max values for male and female weights...same for the other ifs
if(is.na(data$Wt_min_F[i])==FALSE) & is.na(data$Wt_min_F[i])==FALSE)){
# if both males and females have ranges
#if there min/max values for male and female weights...same for the other ifs
if(is.na(data$Wt_min_F[i])==FALSE && is.na(data$Wt_min_F[i])==FALSE){
data_processed$Wt_Av_F[i]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))
}
# if both males and females have ranges
#if there min/max values for male and female weights...same for the other ifs
if(is.na(data$Wt_min_F[i])==FALSE && is.na(data$Wt_min_F[i])==FALSE){
data_processed$Wt_min[i]<-min(c(data$Wt_min_F[i],data$Wt_max_F[i]))
data_processed$Wt_min[i]<-max(c(data$Wt_min_F[i],data$Wt_max_F[i]))
}
# if both males and females have ranges
#if there min/max values for male and female weights...same for the other ifs
if(is.na(data$Wt_min_F[i])==FALSE && is.na(data$Wt_min_F[i])==FALSE){
data_processed$Wt_min[i]<-min(c(data$Wt_min_F[i],data$Wt_max_F[i],data$Wt_min_M[i],data$Wt_max_M[i]))
data_processed$Wt_min[i]<-max(c(data$Wt_min_F[i],data$Wt_max_F[i],data$Wt_min_M[i],data$Wt_max_M[i]))
}
data_processed$Wt_min
data_processed$Wt_min[51]<-min(c(data$Wt_min_F[51],data$Wt_max_F[51],data$Wt_min_M[51],data$Wt_max_M[51]))
data_processed$Wt_min[51]
View(data)
data_processed$Wt_max[51]<-max(c(data$Wt_max_F[51],data$Wt_max_F[51],data$Wt_max_M[51],data$Wt_max_M[51]))
data_processed$Wt_max[51]
is.na(data$Wt_min_F[51])==FALSE && is.na(data$Wt_min_F[51])==FALSE)
#if there are male/female ranges, provide their mean; this is clunky but I prefer to have the names written out to reduce human error in assigning column numbers
for (i in 1:length(data$Species)){
#if there min/max values for male and female weights...same for the other ifs
if(is.na(data$Wt_min_F[i])==FALSE){
data_processed$Wt_Av_F[i]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))
}
if(is.na(data$Wt_min_M[i])==FALSE){
data_processed$Wt_Av_M[i]<-mean(c(data$Wt_min_M[i],data$Wt_max_M[i]))
}
if(is.na(data$Bl_min_F[i])==FALSE){
data_processed$Bl_Av_F[i]<-mean(c(data$Bl_min_F[i],data$Bl_max_F[i]))
}
if(is.na(data$Bl_min_M[i])==FALSE){
data_processed$Bl_Av_M[i]<-mean(c(data$Bl_min_M[i],data$Bl_max_M[i]))
}
if(is.na(data$Tl_min_F[i])==FALSE){
data_processed$Tl_Av_F[i]<-mean(c(data$Tl_min_F[i],data$Tl_max_F[i]))
}
if(is.na(data$Tl_min_M[i])==FALSE){
data_processed$Tl_Av_M[i]<-mean(c(data$Tl_min_M[i],data$Tl_max_M[i]))
}
# if both males and females have ranges
#if there min/max values for male or female weights...same for the other ifs
if(is.na(data$Wt_min_F[i])==FALSE | is.na(data$Wt_min_M[i])==FALSE){
data_processed$Wt_min[i]<-min(c(data$Wt_min_F[i],data$Wt_max_F[i],data$Wt_min_M[i],data$Wt_max_M[i]))
data_processed$Wt_min[i]<-max(c(data$Wt_min_F[i],data$Wt_max_F[i],data$Wt_min_M[i],data$Wt_max_M[i]))
}
}
data_processed$Wt_max
#if there are male/female ranges, provide their mean; this is clunky but I prefer to have the names written out to reduce human error in assigning column numbers
for (i in 1:length(data$Species)){
#if there min/max values for male and female weights...same for the other ifs
if(is.na(data$Wt_min_F[i])==FALSE){
data_processed$Wt_Av_F[i]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))
}
if(is.na(data$Wt_min_M[i])==FALSE){
data_processed$Wt_Av_M[i]<-mean(c(data$Wt_min_M[i],data$Wt_max_M[i]))
}
if(is.na(data$Bl_min_F[i])==FALSE){
data_processed$Bl_Av_F[i]<-mean(c(data$Bl_min_F[i],data$Bl_max_F[i]))
}
if(is.na(data$Bl_min_M[i])==FALSE){
data_processed$Bl_Av_M[i]<-mean(c(data$Bl_min_M[i],data$Bl_max_M[i]))
}
if(is.na(data$Tl_min_F[i])==FALSE){
data_processed$Tl_Av_F[i]<-mean(c(data$Tl_min_F[i],data$Tl_max_F[i]))
}
if(is.na(data$Tl_min_M[i])==FALSE){
data_processed$Tl_Av_M[i]<-mean(c(data$Tl_min_M[i],data$Tl_max_M[i]))
}
# if both males and females have ranges
#if there min/max values for male or female weights...same for the other ifs
if(is.na(data$Wt_min_F[i])==FALSE | is.na(data$Wt_min_M[i])==FALSE){
data_processed$Wt_min[i]<-min(c(data$Wt_min_F[i],data$Wt_max_F[i],data$Wt_min_M[i],data$Wt_max_M[i]))
data_processed$Wt_max[i]<-max(c(data$Wt_min_F[i],data$Wt_max_F[i],data$Wt_min_M[i],data$Wt_max_M[i]))
}
}
data_processed$Wt_max
data=read.csv("TableCode_example.csv", header=TRUE)
#make a matrix for all data but also add 3 columns for final Tl, Bl and Wt
data_processed<-matrix(ncol=(ncol(data)+3), nrow=nrow(data))
colnames(data_processed)<-c("Tl_mm", "Bl_mm"," Wt_g",colnames(data))
rownames(data_processed)<-data$Species
# turn into data frame to feed into loop;
data_processed=as.data.frame((data_processed))
#if there are male/female ranges, provide their mean; this is clunky but I prefer to have the names written out to reduce human error in assigning column numbers
for (i in 1:length(data$Species)){
#if there min/max values for male and female weights...same for the other ifs
if(is.na(data$Wt_min_F[i])==FALSE){
data_processed$Wt_Av_F[i]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))
}
if(is.na(data$Wt_min_M[i])==FALSE){
data_processed$Wt_Av_M[i]<-mean(c(data$Wt_min_M[i],data$Wt_max_M[i]))
}
if(is.na(data$Bl_min_F[i])==FALSE){
data_processed$Bl_Av_F[i]<-mean(c(data$Bl_min_F[i],data$Bl_max_F[i]))
}
if(is.na(data$Bl_min_M[i])==FALSE){
data_processed$Bl_Av_M[i]<-mean(c(data$Bl_min_M[i],data$Bl_max_M[i]))
}
if(is.na(data$Tl_min_F[i])==FALSE){
data_processed$Tl_Av_F[i]<-mean(c(data$Tl_min_F[i],data$Tl_max_F[i]))
}
if(is.na(data$Tl_min_M[i])==FALSE){
data_processed$Tl_Av_M[i]<-mean(c(data$Tl_min_M[i],data$Tl_max_M[i]))
}
# if both males and females have ranges
#if there min/max values for male or female weights...same for the other ifs
if(is.na(data$Wt_min_F[i])==FALSE | is.na(data$Wt_min_M[i])==FALSE){
data_processed$Wt_min[i]<-min(c(data$Wt_min_F[i],data$Wt_max_F[i],data$Wt_min_M[i],data$Wt_max_M[i]))
data_processed$Wt_max[i]<-max(c(data$Wt_min_F[i],data$Wt_max_F[i],data$Wt_min_M[i],data$Wt_max_M[i]))
}
if(is.na(data$Bl_min_F[i])==FALSE | is.na(data$Bl_min_M[i])==FALSE){
data_processed$Bl_min[i]<-min(c(data$Bl_min_F[i],data$Bl_max_F[i],data$Bl_min_M[i],data$Bl_max_M[i]))
data_processed$Bl_max[i]<-max(c(data$Bl_min_F[i],data$Bl_max_F[i],data$Bl_min_M[i],data$Bl_max_M[i]))
}
if(is.na(data$Tl_min_F[i])==FALSE | is.na(data$Tl_min_M[i])==FALSE){
data_processed$Tl_min[i]<-min(c(data$Tl_min_F[i],data$Tl_max_F[i],data$Tl_min_M[i],data$Tl_max_M[i]))
data_processed$Tl_max[i]<-max(c(data$Tl_min_F[i],data$Tl_max_F[i],data$Tl_min_M[i],data$Tl_max_M[i]))
}
}
#which(!is.na(data_processed$Tl_Av_M))
#max (data_processed[i,29:30] )
#data_processed$Wt_max[51]<-max(c(data$Wt_max_F[51],data$Wt_max_F[51],data$Wt_max_M[51],data$Wt_max_M[51]))
data_processed$Tl_min
data_processed$Tl_max
data=read.csv("TableCode_example.csv", header=TRUE)
#make a matrix for all data but also add 3 columns for final Tl, Bl and Wt
data_processed<-matrix(ncol=(ncol(data)+3), nrow=nrow(data))
colnames(data_processed)<-c("Tl_mm", "Bl_mm"," Wt_g",colnames(data))
rownames(data_processed)<-data$Species
# turn into data frame to feed into loop;
data_processed=as.data.frame((data_processed))
#if there are male/female ranges, provide their mean; this is clunky but I prefer to have the names written out to reduce human error in assigning column numbers
for (i in 1:length(data$Species)){
#if there min/max values for male and female weights...same for the other ifs
if(is.na(data$Wt_min_F[i])==FALSE){
data_processed$Wt_Av_F[i]<-mean(c(data$Wt_min_F[i],data$Wt_max_F[i]))
}
if(is.na(data$Wt_min_M[i])==FALSE){
data_processed$Wt_Av_M[i]<-mean(c(data$Wt_min_M[i],data$Wt_max_M[i]))
}
if(is.na(data$Bl_min_F[i])==FALSE){
data_processed$Bl_Av_F[i]<-mean(c(data$Bl_min_F[i],data$Bl_max_F[i]))
}
if(is.na(data$Bl_min_M[i])==FALSE){
data_processed$Bl_Av_M[i]<-mean(c(data$Bl_min_M[i],data$Bl_max_M[i]))
}
if(is.na(data$Tl_min_F[i])==FALSE){
data_processed$Tl_Av_F[i]<-mean(c(data$Tl_min_F[i],data$Tl_max_F[i]))
}
if(is.na(data$Tl_min_M[i])==FALSE){
data_processed$Tl_Av_M[i]<-mean(c(data$Tl_min_M[i],data$Tl_max_M[i]))
}
# if both males and females have ranges
#if there min/max values for male or female weights...same for the other ifs
if(is.na(data$Wt_min_F[i])==FALSE | is.na(data$Wt_min_M[i])==FALSE){
data_processed$Wt_min[i]<-min(c(data$Wt_min_F[i],data$Wt_max_F[i],data$Wt_min_M[i],data$Wt_max_M[i]))
data_processed$Wt_max[i]<-max(c(data$Wt_max_F[i],data$Wt_max_F[i],data$Wt_max_M[i],data$Wt_max_M[i]))
}
if(is.na(data$Bl_min_F[i])==FALSE | is.na(data$Bl_min_M[i])==FALSE){
data_processed$Bl_min[i]<-min(c(data$Bl_min_F[i],data$Bl_max_F[i],data$Bl_min_M[i],data$Bl_max_M[i]))
data_processed$Bl_max[i]<-max(c(data$Bl_max_F[i],data$Bl_max_F[i],data$Bl_max_M[i],data$Bl_max_M[i]))
}
if(is.na(data$Tl_min_F[i])==FALSE | is.na(data$Tl_min_M[i])==FALSE){
data_processed$Tl_min[i]<-min(c(data$Tl_min_F[i],data$Tl_max_F[i],data$Tl_min_M[i],data$Tl_max_M[i]))
data_processed$Tl_max[i]<-max(c(data$Tl_max_F[i],data$Tl_max_F[i],data$Tl_max_M[i],data$Tl_max_M[i]))
}
}
#which(!is.na(data_processed$Tl_Av_M))
#max (data_processed[i,29:30] )
#data_processed$Wt_max[51]<-max(c(data$Wt_max_F[51],data$Wt_max_F[51],data$Wt_max_M[51],data$Wt_max_M[51]))
data_processed$Tl_max
data_processed$Tl_min
data_processed$Wt_min
data_processed$Wt_max
